scale_x_discrete(breaks=seq(500, 30000, 2500))
#geom_hline(yintercept=0.5834400+7.180483e-06,linetype=2,col= "darkgreen",size=1)+
#geom_hline(yintercept=0.5834400+7.180483e-06,linetype=2,col= "darkgreen",size=1)
plot2.sampsize <- ggplot(filter(sample.runs.melt,variable=="RMSE"),aes(factor(Sample.No),y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
theme_bw()+ theme(text = element_text(size=20))+
xlab("Number of Samples")+
ylab("RMSE")+
scale_x_discrete(breaks=seq(500, 30000, 2500))+
scale_y_reverse()
#geom_hline(yintercept= 0.1024951+7.180483e-06,linetype=2,col= "darkgreen",size=1)
stat_sum_single <- function(fun, geom="point", ...) {
stat_summary(fun.y=fun, colour="red", geom=geom, size = 3, ...)
}
stat_sum_single2 <- function(fun, geom="point", ...) {
stat_summary(fun.y=fun, colour="blueviolet", geom=geom, size = 6,shape= 95, ...)
}
plot1.sampsize <- ggplot(filter(sample.runs.melt,variable=="Rsq"),aes(factor(Sample.No),y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
theme_bw()+ theme(text = element_text(size=20))+
ylab(bquote('Adjusted'~ R^2))+xlab("")+
scale_x_discrete(breaks=seq(500, 30000, 2500))
#geom_hline(yintercept=0.5834400+7.180483e-06,linetype=2,col= "darkgreen",size=1)+
#geom_hline(yintercept=0.5834400+7.180483e-06,linetype=2,col= "darkgreen",size=1)
plot2.sampsize <- ggplot(filter(sample.runs.melt,variable=="RMSE"),aes(factor(Sample.No),y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
theme_bw()+ theme(text = element_text(size=20))+
xlab("Number of Samples")+
ylab("RMSE")+
scale_x_discrete(breaks=seq(500, 30000, 2500))+
scale_y_reverse()
#geom_hline(yintercept= 0.1024951+7.180483e-06,linetype=2,col= "darkgreen",size=1)
std <- function(x) sd(x)/sqrt(length(x))
std_h  <- function(x) mean(x)+(sd(x)/sqrt(length(x)))
std_l  <- function(x) mean(x)-(sd(x)/sqrt(length(x)))
plot1.sampsize <- ggplot(filter(sample.runs.melt,variable=="Rsq"),aes(factor(Sample.No),y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
theme_bw()+ theme(text = element_text(size=20))+
ylab(bquote('Adjusted'~ R^2))+xlab("")+
scale_x_discrete(breaks=seq(500, 30000, 2500))
#geom_hline(yintercept=0.5834400+7.180483e-06,linetype=2,col= "darkgreen",size=1)+
#geom_hline(yintercept=0.5834400+7.180483e-06,linetype=2,col= "darkgreen",size=1)
plot2.sampsize <- ggplot(filter(sample.runs.melt,variable=="RMSE"),aes(factor(Sample.No),y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
theme_bw()+ theme(text = element_text(size=20))+
xlab("Number of Samples")+
ylab("RMSE")+
scale_x_discrete(breaks=seq(500, 30000, 2500))+
scale_y_reverse()
#geom_hline(yintercept= 0.1024951+7.180483e-06,linetype=2,col= "darkgreen",size=1)
grid.arrange(plot1.sampsize, plot2.sampsize, ncol=1)
sample.test.vector2  <- c(rep(seq(from = 1000,to = 9000,by = 1000),10))
cl <- makeCluster(outfilmc <- getOption("cl.cores", 11),outfile="")
registerDoParallel(cl, cores=11)
clusterExport(cl=cl, varlist=c("regressionStats2","samples.training", "samples.validation","samples.validation.actual"),envir=environment())
#clusterEvalQ(cl, library(zebu))
clusterEvalQ(cl, library(randomForest))
sample.runs2  <-as.data.frame(do.call(rbind, parLapply(cl = cl,X = sample.test.vector2,
fun = function(i){
# select samples from the training data set, i
train.sample<- samples.training[sample(nrow(samples.training), i),]
# run random forest on the training sample
randfor <- randomForest(pc ~ . , data=train.sample)
# use the model to predict onto the validation data
val.predicted <- stats::predict(randfor,samples.validation)
#subset the "real" validation values
#run regression stats (Marburg Rsenel) and populate data frame
stats <- regressionStats2(val.predicted, samples.validation.actual, adj.rsq = TRUE, plot = FALSE)
return(stats)})))
stopCluster(cl)
sample.runs2$Sample.No  <- sample.test.vector2
plot(sample.runs2$Rsq~sample.runs2$Sample.No)
sample.runs.melt2  <- melt(sample.runs2,id.vars = "Sample.No")
sample.runs.all <- rbind(sample.runs,sample.runs2)
plot(sample.runs.all$Rsq,sample.runs.all$Sample.No)
plot(sample.runs.all$Sample.No, sample.runs.all$Rsq)
plot1.sampsize <- ggplot(filter(sample.runs.all,variable=="Rsq"),aes(Sample.No,y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
theme_bw()+ theme(text = element_text(size=20))+
ylab(bquote('Adjusted'~ R^2))+xlab("")+
scale_x_discrete(breaks=seq(500, 30000, 2500))
#geom_hline(yintercept=0.5834400+7.180483e-06,linetype=2,col= "darkgreen",size=1)+
#geom_hline(yintercept=0.5834400+7.180483e-06,linetype=2,col= "darkgreen",size=1)
plot2.sampsize <- ggplot(filter(sample.runs.all,variable=="RMSE"),aes(Sample.No,y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
theme_bw()+ theme(text = element_text(size=20))+
xlab("Number of Samples")+
ylab("RMSE")+
scale_x_discrete(breaks=seq(500, 30000, 2500))+
scale_y_reverse()
#geom_hline(yintercept= 0.1024951+7.180483e-06,linetype=2,col= "darkgreen",size=1)
library(dplyr)
ggplot(filter(sample.runs.all,variable=="Rsq"),aes(Sample.No,y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
theme_bw()+ theme(text = element_text(size=20))+
ylab(bquote('Adjusted'~ R^2))+xlab("")+
scale_x_discrete(breaks=seq(500, 30000, 2500))
View(sample.runs.all)
sample.runs.all <- melt(sample.runs.all,id.vars = "Sample.No")
ggplot(filter(sample.runs.all,variable=="Rsq"),aes(Sample.No,y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
theme_bw()+ theme(text = element_text(size=20))+
ylab(bquote('Adjusted'~ R^2))+xlab("")+
scale_x_discrete(breaks=seq(500, 30000, 2500))
ggplot(filter(sample.runs.all,variable=="Rsq"),aes(Sample.No,y = value))+
stat_smooth(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
theme_bw()+ theme(text = element_text(size=20))+
ylab(bquote('Adjusted'~ R^2))+xlab("")+
scale_x_discrete(breaks=seq(500, 30000, 2500))
plot1.sampsize <- ggplot(filter(sample.runs.all,variable=="Rsq"),aes(factor(Sample.No),y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
theme_bw()+ theme(text = element_text(size=20))+
ylab(bquote('Adjusted'~ R^2))+xlab("")+
scale_x_discrete(breaks=seq(500, 30000, 2500))
ggplot(filter(sample.runs.all,variable=="Rsq"),aes(factor(Sample.No),y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
theme_bw()+ theme(text = element_text(size=20))+
ylab(bquote('Adjusted'~ R^2))+xlab("")+
scale_x_discrete(breaks=seq(500, 30000, 2500))
plot1.sampsize <- ggplot(filter(sample.runs.all,variable=="Rsq"),aes(factor(Sample.No),y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
theme_bw()+ theme(text = element_text(size=20))+
ylab(bquote('Adjusted'~ R^2))+xlab("")+
scale_x_discrete(breaks=seq(500, 30000, 2500))
#geom_hline(yintercept=0.5834400+7.180483e-06,linetype=2,col= "darkgreen",size=1)+
#geom_hline(yintercept=0.5834400+7.180483e-06,linetype=2,col= "darkgreen",size=1)
plot2.sampsize <- ggplot(filter(sample.runs.all,variable=="RMSE"),aes(Sample.No,y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
theme_bw()+ theme(text = element_text(size=20))+
xlab("Number of Samples")+
ylab("RMSE")+
scale_x_discrete(breaks=seq(500, 30000, 2500))+
scale_y_reverse()
#geom_hline(yintercept= 0.1024951+7.180483e-06,linetype=2,col= "darkgreen",size=1)
#pdf(file = "Data/Outputs/5.Figures/samplesize.pdf",width = 15,height = 12)
grid.arrange(plot1.sampsize, plot2.sampsize, ncol=1)
plot1.sampsize <- ggplot(filter(sample.runs.all,variable=="Rsq"),aes(factor(Sample.No),y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
theme_bw()+ theme(text = element_text(size=20))+
ylab(bquote('Adjusted'~ R^2))+xlab("")+
scale_x_discrete(breaks=seq(500, 30000, 2500))
#geom_hline(yintercept=0.5834400+7.180483e-06,linetype=2,col= "darkgreen",size=1)+
#geom_hline(yintercept=0.5834400+7.180483e-06,linetype=2,col= "darkgreen",size=1)
plot2.sampsize <- ggplot(filter(sample.runs.all,variable=="RMSE"),aes(factor(Sample.No),y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
theme_bw()+ theme(text = element_text(size=20))+
xlab("Number of Samples")+
ylab("RMSE")+
scale_x_discrete(breaks=seq(500, 30000, 2500))+
scale_y_reverse()
#geom_hline(yintercept= 0.1024951+7.180483e-06,linetype=2,col= "darkgreen",size=1)
#pdf(file = "Data/Outputs/5.Figures/samplesize.pdf",width = 15,height = 12)
grid.arrange(plot1.sampsize, plot2.sampsize, ncol=1)
pdf(file = "D:/Projects_new/woodycovermodels/CodeDataData/Outputs/5.Figures/samplesize.pdf",width = 15,height = 12)
pdf(file = "D:/Projects_new/woodycovermodels/CodeData/Data/Outputs/5.Figures/samplesize.pdf",width = 15,height = 12)
grid.arrange(plot1.sampsize, plot2.sampsize, ncol=1)
dev.off()
read.csv(file = "C:/Users/55110140/Downloads/South Africa+Northern Province_Admin_1_rfe.csv",header = TRUE)
sa.rfe <- read.csv(file = "C:/Users/55110140/Downloads/South Africa+Northern Province_Admin_1_rfe.csv",header = TRUE)
View(sa.rfe)
colnames(sa.rfe)
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010." "X2014.2015)
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.)
geom_line()
library(ggplot)
library(ggplot2)
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.)
geom_line()
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.)+
geom_line()
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_line()
print(rainplot)
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar()
print(rainplot)
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar(stat = "identity")
print(rainplot)
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar(stat = "identity")+
stat_smooth()
print(rainplot)
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar(stat = "identity")+
stat_smooth(se = FALSE)
print(rainplot)
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar(stat = "identity")+
stat_smooth(se = FALSE)+
theme_dark()
print(rainplot)
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar(stat = "identity")+
stat_smooth(se = FALSE)+
theme_get()
print(rainplot)
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar(stat = "identity")+
stat_smooth(se = FALSE)+
theme_void()
print(rainplot)
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar(stat = "identity")+
stat_smooth(se = FALSE)+
theme_linedraw()
print(rainplot)
install.packages("ggthemes")
library("ggthemes", lib.loc="C:/Users/55110140/Google Drive/Research/Software/R-3.2.3/library")
gplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar(stat = "identity")+
stat_smooth(se = FALSE)+
heme_solarized()
ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar(stat = "identity")+
stat_smooth(se = FALSE)+
heme_solarized()
ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar(stat = "identity")+
stat_smooth(se = FALSE)+
theme_solarized()
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar(stat = "identity")+
stat_smooth(se = FALSE)+ xlim(0,40)
theme_solarized()
print(rainplot)
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar(stat = "identity")+
stat_smooth(se = FALSE)+ ylim(0,40)
theme_solarized()
print(rainplot)
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar(stat = "identity")+
stat_smooth(se = FALSE)+ ylim(0,40)+xlim(0,52)
theme_solarized()
print(rainplot)
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar(stat = "identity")+
stat_smooth(se = FALSE)+ ylim(0,40)+xlim(0,37)
theme_solarized()
print(rainplot)
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar(stat = "identity")+
stat_smooth(se = FALSE)+ ylim(0,40)+xlim(0,37)
theme_solarized()+ ylab("Dekad 10-Daily")+ xlab("")
print(rainplot)
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar(stat = "identity")+
stat_smooth(se = FALSE)+ ylim(0,40)+xlim(0,37)+ ylab("Dekad 10-Daily")+ xlab("")
theme_solarized()
print(rainplot)
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar(stat = "identity")+
stat_smooth(se = FALSE)+ ylim(0,40)+xlim(0,37)+ xlab("Dekad 10-Daily")+ ylab("Rainfall (mm)")
theme_solarized()
print(rainplot)
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar(stat = "identity")+
stat_smooth(se = FALSE)+ ylim(0,40)+xlim(0,37)+ xlab("Dekad 10-Daily")+ ylab("Rainfall (mm)")+
theme(text = element_text(size=20))+
theme_solarized()
print(rainplot)
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar(stat = "identity")+
stat_smooth(se = FALSE)+ ylim(0,40)+xlim(0,37)+ xlab("Dekad 10-Daily")+ ylab("Rainfall (mm)")+
theme(text = element_text(size=40))+
theme_solarized()
print(rainplot)
rainplot <- ggplot(sa.rfe, aes(Period, Mean..2001.2010.))+
geom_bar(stat = "identity")+
stat_smooth(se = FALSE)+ ylim(0,40)+xlim(0,37)+ xlab("Dekad 10-Daily")+ ylab("Rainfall (mm)")+
theme(text = element_text(size=40))+theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=90, vjust=0.5, size=16))+
theme_solarized()
print(rainplot)
theme_solarized()
print(rainplot)
load("C:/Users/55110140/Desktop/works.RData")
library(ggplot2)
library(gridExtra)
library(dplyr)
std <- function(x) sd(x)/sqrt(length(x))
std_h  <- function(x) mean(x)+(sd(x)/sqrt(length(x)))
std_l  <- function(x) mean(x)-(sd(x)/sqrt(length(x)))
#functions to plot standard errors
stat_sum_single <- function(fun, geom="point", ...) {
stat_summary(fun.y=fun, colour="red", geom=geom, size = 3, ...)
}
stat_sum_single2 <- function(fun, geom="point", ...) {
stat_summary(fun.y=fun, colour="blueviolet", geom=geom, size = 6,shape= 95, ...)
}
stat_sum_single <- function(fun, geom="point", ...) {
stat_summary(fun.y=fun, colour="blue", geom=geom, size = 3, ...)
}
stat_sum_single2 <- function(fun, geom="point", ...) {
stat_summary(fun.y=fun, colour="blue", geom=geom, size = 6,shape= 95, ...)
}
ggplot(filter(rfeMetrics,variable=="Rsquared"),aes(x = Variables,y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
ylab(bquote(~ R^2))+xlab("")+
theme_bw(base_size = 22)+
geom_hline(yintercept=0.65298831,linetype=2,col= "darkgreen",size=1)+
geom_hline(yintercept=0.65298831*0.95,linetype=2,col= "darkgreen",size=1)
stat_sum_single <- function(fun, geom="point", ...) {
stat_summary(fun.y=fun, colour="red", geom=geom, size = 3, ...)
}
stat
stat_sum_single <- function(fun, geom="point", ...) {
stat_summary(fun.y=fun, colour="red", geom=geom, size = 3, ...)
}
ggplot(filter(rfeMetrics,variable=="Rsquared"),aes(x = Variables,y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
ylab(bquote(~ R^2))+xlab("")+
theme_bw(base_size = 22)+
geom_hline(yintercept=0.65298831,linetype=2,col= "darkgreen",size=1)+
geom_hline(yintercept=0.65298831*0.95,linetype=2,col= "darkgreen",size=1)
stat_sum_single2 <- function(fun, geom="point", ...) {
stat_summary(fun.y=fun, colour="blue", geom=geom, size = 8,shape= 95, ...)
}
ggplot(filter(rfeMetrics,variable=="Rsquared"),aes(x = Variables,y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
ylab(bquote(~ R^2))+xlab("")+
theme_bw(base_size = 22)+
geom_hline(yintercept=0.65298831,linetype=2,col= "darkgreen",size=1)+
geom_hline(yintercept=0.65298831*0.95,linetype=2,col= "darkgreen",size=1)
plot1<- ggplot(filter(rfeMetrics,variable=="Rsquared"),aes(x = Variables,y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
ylab(bquote(~ R^2))+xlab("")+
theme_bw(base_size = 22)+
geom_hline(yintercept=0.65298831,linetype=2,col= "darkgreen",size=1)+
geom_hline(yintercept=0.65298831*0.95,linetype=2,col= "darkgreen",size=1)
plot2 <- ggplot(filter(rfeMetrics,variable=="RMSE"),aes(x = Variables,y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
ylab("RMSE")+xlab("Number of Variables")+
theme_bw(base_size = 22)+
geom_hline(yintercept=0.09367232,linetype=2,col= "darkgreen",size=1)+
geom_hline(yintercept=0.09367232*1.05,linetype=2,col= "darkgreen",size=1)+
scale_y_reverse()
#pdf(file = "rfe.pdf",width = 15,height = 12)
grid.arrange(plot1, plot2, ncol=1)
stat_sum_single <- function(fun, geom="point", ...) {
stat_summary(fun.y=fun, colour="red", geom=geom, size = 2, ...)
}
stat_sum_single2 <- function(fun, geom="point", ...) {
stat_summary(fun.y=fun, colour="blue", geom=geom, size = 7,shape= 95, ...)
}
plot1<- ggplot(filter(rfeMetrics,variable=="Rsquared"),aes(x = Variables,y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
ylab(bquote(~ R^2))+xlab("")+
theme_bw(base_size = 22)+
geom_hline(yintercept=0.65298831,linetype=2,col= "darkgreen",size=1)+
geom_hline(yintercept=0.65298831*0.95,linetype=2,col= "darkgreen",size=1)
plot2 <- ggplot(filter(rfeMetrics,variable=="RMSE"),aes(x = Variables,y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single(mean)+
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
ylab("RMSE")+xlab("Number of Variables")+
theme_bw(base_size = 22)+
geom_hline(yintercept=0.09367232,linetype=2,col= "darkgreen",size=1)+
geom_hline(yintercept=0.09367232*1.05,linetype=2,col= "darkgreen",size=1)+
scale_y_reverse()
#pdf(file = "rfe.pdf",width = 15,height = 12)
grid.arrange(plot1, plot2, ncol=1)
plot1<- ggplot(filter(rfeMetrics,variable=="Rsquared"),aes(x = Variables,y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
stat_sum_single(mean)+
ylab(bquote(~ R^2))+xlab("")+
theme_bw(base_size = 22)+
geom_hline(yintercept=0.65298831,linetype=2,col= "darkgreen",size=1)+
geom_hline(yintercept=0.65298831*0.95,linetype=2,col= "darkgreen",size=1)
plot2 <- ggplot(filter(rfeMetrics,variable=="RMSE"),aes(x = Variables,y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
stat_sum_single(mean)+
ylab("RMSE")+xlab("Number of Variables")+
theme_bw(base_size = 22)+
geom_hline(yintercept=0.09367232,linetype=2,col= "darkgreen",size=1)+
geom_hline(yintercept=0.09367232*1.05,linetype=2,col= "darkgreen",size=1)+
scale_y_reverse()
#pdf(file = "rfe.pdf",width = 15,height = 12)
grid.arrange(plot1, plot2, ncol=1)
stat_sum_single <- function(fun, geom="point", ...) {
stat_summary(fun.y=fun, colour="red", geom=geom, size = 3, ...)
}
plot1<- ggplot(filter(rfeMetrics,variable=="Rsquared"),aes(x = Variables,y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
stat_sum_single(mean)+
ylab(bquote(~ R^2))+xlab("")+
theme_bw(base_size = 22)+
geom_hline(yintercept=0.65298831,linetype=2,col= "darkgreen",size=1)+
geom_hline(yintercept=0.65298831*0.95,linetype=2,col= "darkgreen",size=1)
plot2 <- ggplot(filter(rfeMetrics,variable=="RMSE"),aes(x = Variables,y = value))+
geom_line(col="darkgrey",size=1)+
scale_shape_identity() +
stat_sum_single2(std_h)+
stat_sum_single2(std_l)+
stat_sum_single(mean)+
ylab("RMSE")+xlab("Number of Variables")+
theme_bw(base_size = 22)+
geom_hline(yintercept=0.09367232,linetype=2,col= "darkgreen",size=1)+
geom_hline(yintercept=0.09367232*1.05,linetype=2,col= "darkgreen",size=1)+
scale_y_reverse()
#pdf(file = "rfe.pdf",width = 15,height = 12)
grid.arrange(plot1, plot2, ncol=1)
setwd("D:/Projects_new/woodycovermodels/CodeData/Data/Outputs/5.Figures/")
pdf(file = "rfe.pdf",width = 15,height = 12)
grid.arrange(plot1, plot2, ncol=1)
dev.off()
save.image("C:/Users/55110140/Desktop/works.RData")
sample.test.vector  <- c(rep(seq(from = 10000,to = 29000,by = 3000),10))
sample.test.vector2  <- c(rep(seq(from = 1000,to = 9000,by = 1000),10))
samples.training  <- PCtrain[,4:22]
head(samples.training)
head(PCtrain)
